@use "sass:math";

.row {
  display: flex;
  flex-wrap: wrap;

  > .col {
    flex: 1 1 0;
    max-width: 100%;
  }
}

// ---------------------------------------------------------------- //

.f-row {
  display: flex;
  flex-direction: row;
}

.f-col {
  display: flex;
  flex-direction: column;
}

// ---------------------------------------------------------------- //

.f-0 {
  flex: 0 1 auto !important;
  max-width: none !important;
}

// ---------------------------------------------------------------- //

$maxGrow: 4;

@for $i from 0 through $maxGrow {
  .f-g-#{$i} {
    flex-grow: $i !important;
  }
}

$maxShrink: 4;

@for $i from 0 through $maxShrink {
  .f-s-#{$i} {
    flex-shrink: $i !important;
  }
}

// ---------------------------------------------------------------- //

.center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// ---------------------------------------------------------------- //

.start-x {
  display: flex;
  justify-content: flex-start;
}

.center-x {
  display: flex;
  justify-content: center;

  > :is(small, p, h1, h2, h3, h4, h5, h6, a) {
    text-align: center;
  }
}

.end-x {
  display: flex;
  justify-content: flex-end;

  > :is(small, p, h1, h2, h3, h4, h5, h6, a) {
    text-align: end;
  }
}

.between-x {
  display: flex;
  justify-content: space-between;
}

.around-x {
  display: flex;
  justify-content: space-around;
}

// ---------------------------------------------------------------- //

.start-y {
  display: flex;
  align-items: flex-start;
}

.center-y {
  display: flex;
  align-items: center;
}

.end-y {
  display: flex;
  align-items: flex-end;
}

.between-y {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.around-y {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

// ---------------------------------------------------------------- //

.f-wrap {
  display: flex;
  flex-wrap: wrap;
}

.f-nowrap {
  display: flex;
  flex-wrap: nowrap;
}

// ---------------------------------------------------------------- //

$max: 10;
$step: 5;

@for $i from 0 through math.div($max * 10, $step) {
  $value: $i * math.div($step, 10);

  @if $value % 1 == 0 {
    .g-#{$value} {
      gap: #{$value}rem !important;
    }

    .g-row-#{$value} {
      row-gap: #{$value}rem !important;
    }

    .g-col-#{$value} {
      column-gap: #{$value}rem !important;
    }
  } @else {
    $floor: math.floor($value);

    .g-#{$floor}\.#{($value - $floor) * 10} {
      gap: #{$value}rem !important;
    }

    .g-row-#{$floor}\.#{($value - $floor) * 10} {
      row-gap: #{$value}rem !important;
    }

    .g-col-#{$floor}\.#{($value - $floor) * 10} {
      column-gap: #{$value}rem !important;
    }
  }
}
